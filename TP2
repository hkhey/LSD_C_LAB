#include<stdio.h>
#include<math.h>
#include<stdlib.h>
double f(double x)
{
	return exp(-pow(x,2)/2);
}


double RectangleDroit(double (*f)(double),double a,double b,double n)
{
	double I=0;
	double h=(b-a)/n;
	double x=a;
	for(int i=0;i<n;i++)
	{
		I+=f(x);
		x+=h;
	}
	return h*I;
}


double RectangleGauche(double (*f)(double),double a,double b,double n)
{
	double I=0;
	double h=(b-a)/n;
	double x=a+h;
	for(int i=0;i<n;i++)
	{
		I+=f(x);
		x+=h;
	}
	return h*I;
}

double Trapeze(double (*f)(double),double a,double b,double n)
{
	double I=0.5*(f(a)+f(b));
	double h=(b-a)/n;
	double x=a+h;
	for(int i=0;i<n-1;i++)
	{
		I+=f(x);
		x+=h;
	}
	return h*I;

}


double Simpson(double (*f)(double),double a,double b, int n)
{
	double h=(b-a)/n;
	double x=a+h;
	double z=a+h/2;
	double I1=0;
	double I2=f(z);
	for(int i=0;i<n-1;i++)
	{
		z+=h;
		I1+=f(x);
		I2+=f(z);
		x+=h;
	}
	double k = (h/6)*(f(a)+f(b)+2*I1+4*I2);
	return k;
}

double NombreNecessaire(double(*f)(double),double a,double b,double Err,double(* Methode)(double(*)(double),double,double, int))
{
        double I=0.855624391892149;
	double n=1;
	double res;
        while ((res = fabs(Methode(f, a, b, n) - I)) > Err)
        {
                n++;
        }
        return n;
}

int main()
{
	double a,b,n,err,res;
	printf("Donner les bornes et le pas:\n");
	printf("a:\t");
	scanf("%lf", &a);
	printf("\n");
	printf("b:\t");
	scanf("%lf", &b);
	printf("\n");
	printf("n:\t");
	scanf("%lf", &n);
	printf("\n");
	printf("%lf\n", RectangleDroit(f, a, b, n));
	printf("\n");
	printf("%lf\n", RectangleGauche(f, a, b, n));
	printf("\n");
	printf("%lf\n", Trapeze(f, a, b, n));
	printf("\n");
	printf("%lf\n", Simpson(f, a, b, n));
	printf("\n");
        err = pow(10, -9);
	res =  NombreNecessaire(f,a,b,err,Simpson);
	printf("res= %lf\n",res);
	return 0;
}
